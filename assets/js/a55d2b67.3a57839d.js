"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[58300],{3905:(e,t,a)=>{a.d(t,{Zo:()=>i,kt:()=>b});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function d(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?d(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):d(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},d=Object.keys(e);for(n=0;n<d.length;n++)a=d[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(e);for(n=0;n<d.length;n++)a=d[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},i=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,d=e.originalType,l=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),p=s(a),y=o,b=p["".concat(l,".").concat(y)]||p[y]||u[y]||d;return a?n.createElement(b,r(r({ref:t},i),{},{components:a})):n.createElement(b,r({ref:t},i))}));function b(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var d=a.length,r=new Array(d);r[0]=y;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:o,r[1]=c;for(var s=2;s<d;s++)r[s]=a[s];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}y.displayName="MDXCreateElement"},82064:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>u,Bullet:()=>i,Details:()=>b,SpecifiedBy:()=>p,assets:()=>s,contentTitle:()=>c,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>y});var n=a(87462),o=a(67294),d=a(3905);const r={id:"suspend-physical-card-payload",title:"SuspendPhysicalCardPayload",hide_table_of_contents:!1},c=void 0,l={unversionedId:"api-reference/unions/suspend-physical-card-payload",id:"api-reference/unions/suspend-physical-card-payload",title:"SuspendPhysicalCardPayload",description:"No description",source:"@site/docs/api-reference/unions/suspend-physical-card-payload.mdx",sourceDirName:"api-reference/unions",slug:"/api-reference/unions/suspend-physical-card-payload",permalink:"/api-reference/unions/suspend-physical-card-payload",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api-reference/unions/suspend-physical-card-payload.mdx",tags:[],version:"current",frontMatter:{id:"suspend-physical-card-payload",title:"SuspendPhysicalCardPayload",hide_table_of_contents:!1}},s={},i=()=>(0,d.kt)(o.Fragment,null,(0,d.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,d.kt)(o.Fragment,null,"Specification",(0,d.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,d.kt)(o.Fragment,null,(0,d.kt)("span",{className:e.class},e.text)),y=[{value:"Possible types",id:"possible-types",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>SuspendPhysicalCardPayload.<b>SuspendPhysicalCardSuccessPayload</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-suspendphysicalcardpayloadbsuspendphysicalcardsuccesspayloadbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>SuspendPhysicalCardPayload.<b>AccountMembershipNotAllowedRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-suspendphysicalcardpayloadbaccountmembershipnotallowedrejectionbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>SuspendPhysicalCardPayload.<b>CardNotFoundRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-suspendphysicalcardpayloadbcardnotfoundrejectionbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>SuspendPhysicalCardPayload.<b>ForbiddenRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-suspendphysicalcardpayloadbforbiddenrejectionbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>SuspendPhysicalCardPayload.<b>PhysicalCardNotFoundRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-suspendphysicalcardpayloadbphysicalcardnotfoundrejectionbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>SuspendPhysicalCardPayload.<b>ValidationRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-suspendphysicalcardpayloadbvalidationrejectionbcode-",level:4},{value:"Returned by",id:"returned-by",level:3}],b=e=>{let{dataOpen:t,dataClose:a,children:r,startOpen:c=!1}=e;const[l,s]=(0,o.useState)(c);return(0,d.kt)("details",(0,n.Z)({},l?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,d.kt)("summary",{onClick:e=>{e.preventDefault(),s((e=>!e))},style:{listStyle:"none"}},l?t:a),l&&r)},h={Bullet:i,SpecifiedBy:p,Badge:u,toc:y,Details:b},f="wrapper";function m(e){let{components:t,...a}=e;return(0,d.kt)(f,(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,d.kt)("p",null,"No description"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-graphql"},"union SuspendPhysicalCardPayload = SuspendPhysicalCardSuccessPayload | AccountMembershipNotAllowedRejection | CardNotFoundRejection | ForbiddenRejection | PhysicalCardNotFoundRejection | ValidationRejection\n")),(0,d.kt)("h3",{id:"possible-types"},"Possible types"),(0,d.kt)("h4",{id:"code-style-fontweight-normal-suspendphysicalcardpayloadbsuspendphysicalcardsuccesspayloadbcode-"},(0,d.kt)("a",{parentName:"h4",href:"/api-reference/objects/suspend-physical-card-success-payload"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"SuspendPhysicalCardPayload.",(0,d.kt)("b",null,"SuspendPhysicalCardSuccessPayload")))," ",(0,d.kt)(u,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,d.kt)("blockquote",null),(0,d.kt)("h4",{id:"code-style-fontweight-normal-suspendphysicalcardpayloadbaccountmembershipnotallowedrejectionbcode-"},(0,d.kt)("a",{parentName:"h4",href:"/api-reference/objects/account-membership-not-allowed-rejection"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"SuspendPhysicalCardPayload.",(0,d.kt)("b",null,"AccountMembershipNotAllowedRejection")))," ",(0,d.kt)(u,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Rejection returned when the Account Membership is not allowed to use an operation.")),(0,d.kt)("h4",{id:"code-style-fontweight-normal-suspendphysicalcardpayloadbcardnotfoundrejectionbcode-"},(0,d.kt)("a",{parentName:"h4",href:"/api-reference/objects/card-not-found-rejection"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"SuspendPhysicalCardPayload.",(0,d.kt)("b",null,"CardNotFoundRejection")))," ",(0,d.kt)(u,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Rejection returned if the card was not found or if the user does not have the rights to know that the account exists")),(0,d.kt)("h4",{id:"code-style-fontweight-normal-suspendphysicalcardpayloadbforbiddenrejectionbcode-"},(0,d.kt)("a",{parentName:"h4",href:"/api-reference/objects/forbidden-rejection"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"SuspendPhysicalCardPayload.",(0,d.kt)("b",null,"ForbiddenRejection")))," ",(0,d.kt)(u,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,d.kt)("blockquote",null),(0,d.kt)("h4",{id:"code-style-fontweight-normal-suspendphysicalcardpayloadbphysicalcardnotfoundrejectionbcode-"},(0,d.kt)("a",{parentName:"h4",href:"/api-reference/objects/physical-card-not-found-rejection"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"SuspendPhysicalCardPayload.",(0,d.kt)("b",null,"PhysicalCardNotFoundRejection")))," ",(0,d.kt)(u,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Rejection returned when the Physical Card does not exist")),(0,d.kt)("h4",{id:"code-style-fontweight-normal-suspendphysicalcardpayloadbvalidationrejectionbcode-"},(0,d.kt)("a",{parentName:"h4",href:"/api-reference/objects/validation-rejection"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"SuspendPhysicalCardPayload.",(0,d.kt)("b",null,"ValidationRejection")))," ",(0,d.kt)(u,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Rejection returned if an input contains invalid data")),(0,d.kt)("h3",{id:"returned-by"},"Returned by"),(0,d.kt)("p",null,(0,d.kt)("a",{parentName:"p",href:"/api-reference/mutations/suspend-physical-card"},(0,d.kt)("inlineCode",{parentName:"a"},"suspendPhysicalCard")),"  ",(0,d.kt)(u,{class:"badge badge--secondary",text:"mutation",mdxType:"Badge"})))}m.isMDXComponent=!0}}]);