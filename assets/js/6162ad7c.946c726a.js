"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[56192],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},f="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),f=c(n),u=a,m=f["".concat(l,".").concat(u)]||f[u]||p[u]||r;return n?i.createElement(m,o(o({ref:t},d),{},{components:n})):i.createElement(m,o({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[f]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},36114:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>p,Bullet:()=>d,Details:()=>m,SpecifiedBy:()=>f,assets:()=>c,contentTitle:()=>s,default:()=>y,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var i=n(87462),a=n(67294),r=n(3905);const o={id:"identification-filters-input",title:"IdentificationFiltersInput",hide_table_of_contents:!1},s=void 0,l={unversionedId:"api-reference/inputs/identification-filters-input",id:"api-reference/inputs/identification-filters-input",title:"IdentificationFiltersInput",description:"Filter that can be passed to get the identifications in specific data ranges",source:"@site/docs/api-reference/inputs/identification-filters-input.mdx",sourceDirName:"api-reference/inputs",slug:"/api-reference/inputs/identification-filters-input",permalink:"/api-reference/inputs/identification-filters-input",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api-reference/inputs/identification-filters-input.mdx",tags:[],version:"current",frontMatter:{id:"identification-filters-input",title:"IdentificationFiltersInput",hide_table_of_contents:!1}},c={},d=()=>(0,r.kt)(a.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),f=e=>(0,r.kt)(a.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),p=e=>(0,r.kt)(a.Fragment,null,(0,r.kt)("span",{className:e.class},e.text)),u=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>IdentificationFiltersInput.<b>statuses</b></code><Bullet /><code>[SwanIdentificationStatus!]</code> <Badge class="badge badge--secondary" text="list"/> <Badge class="badge badge--secondary" text="enum"/>',id:"code-style-fontweight-normal-identificationfiltersinputbstatusesbcodeswanidentificationstatus--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>IdentificationFiltersInput.<b>levels</b></code><Bullet /><code>[IdentificationLevel!]</code> <Badge class="badge badge--secondary" text="list"/> <Badge class="badge badge--secondary" text="enum"/>',id:"code-style-fontweight-normal-identificationfiltersinputblevelsbcodeidentificationlevel--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>IdentificationFiltersInput.<b>processes</b></code><Bullet /><code>[IdentificationProcess!]</code> <Badge class="badge badge--secondary" text="list"/> <Badge class="badge badge--secondary" text="enum"/>',id:"code-style-fontweight-normal-identificationfiltersinputbprocessesbcodeidentificationprocess--",level:4}],m=e=>{let{dataOpen:t,dataClose:n,children:o,startOpen:s=!1}=e;const[l,c]=(0,a.useState)(s);return(0,r.kt)("details",(0,i.Z)({},l?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,r.kt)("summary",{onClick:e=>{e.preventDefault(),c((e=>!e))},style:{listStyle:"none"}},l?t:n),l&&o)},b={Bullet:d,SpecifiedBy:f,Badge:p,toc:u,Details:m},g="wrapper";function y(e){let{components:t,...n}=e;return(0,r.kt)(g,(0,i.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Filter that can be passed to get the identifications in specific data ranges"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"input IdentificationFiltersInput {\n  statuses: [SwanIdentificationStatus!]\n  levels: [IdentificationLevel!]\n  processes: [IdentificationProcess!]\n}\n")),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("h4",{id:"code-style-fontweight-normal-identificationfiltersinputbstatusesbcodeswanidentificationstatus--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"IdentificationFiltersInput.",(0,r.kt)("b",null,"statuses"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/api-reference/enums/swan-identification-status"},(0,r.kt)("inlineCode",{parentName:"a"},"[SwanIdentificationStatus!]"))," ",(0,r.kt)(p,{class:"badge badge--secondary",text:"list",mdxType:"Badge"})," ",(0,r.kt)(p,{class:"badge badge--secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"To filter on status values")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-identificationfiltersinputblevelsbcodeidentificationlevel--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"IdentificationFiltersInput.",(0,r.kt)("b",null,"levels"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/api-reference/enums/identification-level"},(0,r.kt)("inlineCode",{parentName:"a"},"[IdentificationLevel!]"))," ",(0,r.kt)(p,{class:"badge badge--secondary",text:"list",mdxType:"Badge"})," ",(0,r.kt)(p,{class:"badge badge--secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"To filter on level values")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-identificationfiltersinputbprocessesbcodeidentificationprocess--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"IdentificationFiltersInput.",(0,r.kt)("b",null,"processes"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/api-reference/enums/identification-process"},(0,r.kt)("inlineCode",{parentName:"a"},"[IdentificationProcess!]"))," ",(0,r.kt)(p,{class:"badge badge--secondary",text:"list",mdxType:"Badge"})," ",(0,r.kt)(p,{class:"badge badge--secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"To filter on process values")))}y.isMDXComponent=!0}}]);