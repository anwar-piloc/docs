"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[95551],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function d(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):d(d({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=c(a),g=n,m=s["".concat(l,".").concat(g)]||s[g]||u[g]||i;return a?r.createElement(m,d(d({ref:t},p),{},{components:a})):r.createElement(m,d({ref:t},p))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,d=new Array(i);d[0]=g;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[s]="string"==typeof e?e:n,d[1]=o;for(var c=2;c<i;c++)d[c]=a[c];return r.createElement.apply(null,d)}return r.createElement.apply(null,a)}g.displayName="MDXCreateElement"},3872:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>g,Bullet:()=>s,SpecifiedBy:()=>u,assets:()=>c,contentTitle:()=>o,default:()=>y,frontMatter:()=>d,metadata:()=>l,toc:()=>p});var r=a(83117),n=a(67294),i=a(3905);const d={id:"add-digital-card",title:"addDigitalCard",hide_table_of_contents:!1},o=void 0,l={unversionedId:"api-reference/mutations/add-digital-card",id:"api-reference/mutations/add-digital-card",title:"addDigitalCard",description:"Add a Digital Card to push to ApplePay or GooglePay",source:"@site/docs/api-reference/mutations/add-digital-card.mdx",sourceDirName:"api-reference/mutations",slug:"/api-reference/mutations/add-digital-card",permalink:"/api-reference/mutations/add-digital-card",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api-reference/mutations/add-digital-card.mdx",tags:[],version:"current",frontMatter:{id:"add-digital-card",title:"addDigitalCard",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"addCards",permalink:"/api-reference/mutations/add-cards"},next:{title:"addDirectDebitFundingSource",permalink:"/api-reference/mutations/add-direct-debit-funding-source"}},c={},p=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>addDigitalCard.<b>input</b></code><Bullet /><code>AddDigitalCardInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-adddigitalcardbinputbcodeadddigitalcardinput-",level:4},{value:"Type",id:"type",level:3},{value:'<code>AddDigitalCardPayload</code> <Badge class="secondary" text="union"/>',id:"adddigitalcardpayload-",level:4}],s=()=>(0,i.kt)(n.Fragment,null,(0,i.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),u=e=>(0,i.kt)(n.Fragment,null,"Specification",(0,i.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),g=e=>(0,i.kt)(n.Fragment,null,(0,i.kt)("span",{className:"badge badge--"+e.class},e.text)),m={toc:p,Bullet:s,SpecifiedBy:u,Badge:g},f="wrapper";function y(e){let{components:t,...a}=e;return(0,i.kt)(f,(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Add a Digital Card to push to ApplePay or GooglePay"),(0,i.kt)("p",null,"This mutation is restricted to an User access token (",(0,i.kt)("a",{parentName:"p",href:"https://docs.swan.io/api/authentication"},"Learn More"),") and ask the user to consent to this request."),(0,i.kt)("p",null,"The user must be the card holder"),(0,i.kt)("p",null,"A digital card will only be valid for 1 hour after consent validation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"addDigitalCard(\n  input: AddDigitalCardInput\n): AddDigitalCardPayload!\n")),(0,i.kt)("h3",{id:"arguments"},"Arguments"),(0,i.kt)("h4",{id:"code-style-fontweight-normal-adddigitalcardbinputbcodeadddigitalcardinput-"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"addDigitalCard.",(0,i.kt)("b",null,"input"))),(0,i.kt)(s,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"h4",href:"/api-reference/inputs/add-digital-card-input"},(0,i.kt)("inlineCode",{parentName:"a"},"AddDigitalCardInput"))," ",(0,i.kt)(g,{class:"secondary",text:"input",mdxType:"Badge"})),(0,i.kt)("blockquote",null),(0,i.kt)("h3",{id:"type"},"Type"),(0,i.kt)("h4",{id:"adddigitalcardpayload-"},(0,i.kt)("a",{parentName:"h4",href:"/api-reference/unions/add-digital-card-payload"},(0,i.kt)("inlineCode",{parentName:"a"},"AddDigitalCardPayload"))," ",(0,i.kt)(g,{class:"secondary",text:"union",mdxType:"Badge"})),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Payload returned on mutation completion")))}y.isMDXComponent=!0}}]);