"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[59700],{3905:(e,t,a)=>{a.d(t,{Zo:()=>i,kt:()=>m});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),c=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},i=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,i=d(e,["components","mdxType","originalType","parentName"]),p=c(a),f=n,m=p["".concat(o,".").concat(f)]||p[f]||u[f]||l;return a?r.createElement(m,s(s({ref:t},i),{},{components:a})):r.createElement(m,s({ref:t},i))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,s=new Array(l);s[0]=f;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d[p]="string"==typeof e?e:n,s[1]=d;for(var c=2;c<l;c++)s[c]=a[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}f.displayName="MDXCreateElement"},26381:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>u,Bullet:()=>i,Details:()=>m,SpecifiedBy:()=>p,assets:()=>c,contentTitle:()=>d,default:()=>g,frontMatter:()=>s,metadata:()=>o,toc:()=>f});var r=a(87462),n=a(67294),l=a(3905);const s={id:"card-filters-input",title:"CardFiltersInput",hide_table_of_contents:!1},d=void 0,o={unversionedId:"api-reference/inputs/card-filters-input",id:"api-reference/inputs/card-filters-input",title:"CardFiltersInput",description:"Filters that can be applied when listing cards",source:"@site/docs/api-reference/inputs/card-filters-input.mdx",sourceDirName:"api-reference/inputs",slug:"/api-reference/inputs/card-filters-input",permalink:"/api-reference/inputs/card-filters-input",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api-reference/inputs/card-filters-input.mdx",tags:[],version:"current",frontMatter:{id:"card-filters-input",title:"CardFiltersInput",hide_table_of_contents:!1}},c={},i=()=>(0,l.kt)(n.Fragment,null,(0,l.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,l.kt)(n.Fragment,null,"Specification",(0,l.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,l.kt)(n.Fragment,null,(0,l.kt)("span",{className:e.class},e.text)),f=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>CardFiltersInput.<b>status</b></code><Bullet /><code>CardStatus</code> <Badge class="badge badge--secondary" text="enum"/>',id:"code-style-fontweight-normal-cardfiltersinputbstatusbcodecardstatus-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CardFiltersInput.<b>statuses</b></code><Bullet /><code>[CardStatus!]</code> <Badge class="badge badge--secondary" text="list"/> <Badge class="badge badge--secondary" text="enum"/>',id:"code-style-fontweight-normal-cardfiltersinputbstatusesbcodecardstatus--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CardFiltersInput.<b>type</b></code><Bullet /><code>CardType</code> <Badge class="badge badge--secondary" text="enum"/>',id:"code-style-fontweight-normal-cardfiltersinputbtypebcodecardtype-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CardFiltersInput.<b>types</b></code><Bullet /><code>[CardType!]</code> <Badge class="badge badge--secondary" text="list"/> <Badge class="badge badge--secondary" text="enum"/>',id:"code-style-fontweight-normal-cardfiltersinputbtypesbcodecardtype--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CardFiltersInput.<b>search</b></code><Bullet /><code>String</code> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-cardfiltersinputbsearchbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CardFiltersInput.<b>accountId</b></code><Bullet /><code>String</code> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-cardfiltersinputbaccountidbcodestring-",level:4},{value:"Member Of",id:"member-of",level:3}],m=e=>{let{dataOpen:t,dataClose:a,children:s,startOpen:d=!1}=e;const[o,c]=(0,n.useState)(d);return(0,l.kt)("details",(0,r.Z)({},o?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,l.kt)("summary",{onClick:e=>{e.preventDefault(),c((e=>!e))},style:{listStyle:"none"}},o?t:a),o&&s)},b={Bullet:i,SpecifiedBy:p,Badge:u,toc:f,Details:m},y="wrapper";function g(e){let{components:t,...a}=e;return(0,l.kt)(y,(0,r.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Filters that can be applied when listing cards"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"input CardFiltersInput {\n  status: CardStatus\n  statuses: [CardStatus!]\n  type: CardType\n  types: [CardType!]\n  search: String\n  accountId: String\n}\n")),(0,l.kt)("h3",{id:"fields"},"Fields"),(0,l.kt)("h4",{id:"code-style-fontweight-normal-cardfiltersinputbstatusbcodecardstatus-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"CardFiltersInput.",(0,l.kt)("b",null,"status"))),(0,l.kt)(i,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/api-reference/enums/card-status"},(0,l.kt)("inlineCode",{parentName:"a"},"CardStatus"))," ",(0,l.kt)(u,{class:"badge badge--secondary",text:"enum",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The status of the card."),(0,l.kt)("p",{parentName:"blockquote"},'@deprecated(reason: "use ',(0,l.kt)("inlineCode",{parentName:"p"},"statuses"),' instead")')),(0,l.kt)("h4",{id:"code-style-fontweight-normal-cardfiltersinputbstatusesbcodecardstatus--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"CardFiltersInput.",(0,l.kt)("b",null,"statuses"))),(0,l.kt)(i,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/api-reference/enums/card-status"},(0,l.kt)("inlineCode",{parentName:"a"},"[CardStatus!]"))," ",(0,l.kt)(u,{class:"badge badge--secondary",text:"list",mdxType:"Badge"})," ",(0,l.kt)(u,{class:"badge badge--secondary",text:"enum",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Statuses of the card.")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-cardfiltersinputbtypebcodecardtype-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"CardFiltersInput.",(0,l.kt)("b",null,"type"))),(0,l.kt)(i,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/api-reference/enums/card-type"},(0,l.kt)("inlineCode",{parentName:"a"},"CardType"))," ",(0,l.kt)(u,{class:"badge badge--secondary",text:"enum",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Type of card"),(0,l.kt)("p",{parentName:"blockquote"},'@deprecated(reason: "use ',(0,l.kt)("inlineCode",{parentName:"p"},"types"),' instead")')),(0,l.kt)("h4",{id:"code-style-fontweight-normal-cardfiltersinputbtypesbcodecardtype--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"CardFiltersInput.",(0,l.kt)("b",null,"types"))),(0,l.kt)(i,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/api-reference/enums/card-type"},(0,l.kt)("inlineCode",{parentName:"a"},"[CardType!]"))," ",(0,l.kt)(u,{class:"badge badge--secondary",text:"list",mdxType:"Badge"})," ",(0,l.kt)(u,{class:"badge badge--secondary",text:"enum",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Types of card")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-cardfiltersinputbsearchbcodestring-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"CardFiltersInput.",(0,l.kt)("b",null,"search"))),(0,l.kt)(i,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/api-reference/scalars/string"},(0,l.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,l.kt)(u,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"String searched")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-cardfiltersinputbaccountidbcodestring-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"CardFiltersInput.",(0,l.kt)("b",null,"accountId"))),(0,l.kt)(i,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/api-reference/scalars/string"},(0,l.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,l.kt)(u,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Account identifier"),(0,l.kt)("p",{parentName:"blockquote"},"This filter is only available for User Access Token, for the moment")),(0,l.kt)("h3",{id:"member-of"},"Member Of"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api-reference/queries/cards"},(0,l.kt)("inlineCode",{parentName:"a"},"cards")),"  ",(0,l.kt)(u,{class:"badge badge--secondary",text:"query",mdxType:"Badge"})))}g.isMDXComponent=!0}}]);