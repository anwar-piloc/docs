"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[90577],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>y});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=p(n),s=a,y=d["".concat(i,".").concat(s)]||d[s]||u[s]||c;return n?r.createElement(y,o(o({ref:t},m),{},{components:n})):r.createElement(y,o({ref:t},m))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,o=new Array(c);o[0]=s;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<c;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},13903:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>s,Bullet:()=>d,SpecifiedBy:()=>u,assets:()=>p,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>m});var r=n(83117),a=n(67294),c=n(3905);const o={id:"merchant-payment-product-type",title:"MerchantPaymentProductType",hide_table_of_contents:!1},l=void 0,i={unversionedId:"api-reference/enums/merchant-payment-product-type",id:"api-reference/enums/merchant-payment-product-type",title:"MerchantPaymentProductType",description:"The different statuses a MerchantPaymentProduct can have",source:"@site/docs/api-reference/enums/merchant-payment-product-type.mdx",sourceDirName:"api-reference/enums",slug:"/api-reference/enums/merchant-payment-product-type",permalink:"/api-reference/enums/merchant-payment-product-type",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api-reference/enums/merchant-payment-product-type.mdx",tags:[],version:"current",frontMatter:{id:"merchant-payment-product-type",title:"MerchantPaymentProductType",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"MerchantPaymentProductStatus",permalink:"/api-reference/enums/merchant-payment-product-status"},next:{title:"MerchantProfileOrderByFieldInput",permalink:"/api-reference/enums/merchant-profile-order-by-field-input"}},p={},m=[{value:"Values",id:"values",level:3},{value:"<code style={{ fontWeight: 'normal' }}>MerchantPaymentProductType.<b>InternalDirectDebit</b></code>",id:"code-style-fontweight-normal-merchantpaymentproducttypebinternaldirectdebitbcode",level:4},{value:"<code style={{ fontWeight: 'normal' }}>MerchantPaymentProductType.<b>Check</b></code>",id:"code-style-fontweight-normal-merchantpaymentproducttypebcheckbcode",level:4},{value:"Member of",id:"member-of",level:3}],d=()=>(0,c.kt)(a.Fragment,null,(0,c.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),u=e=>(0,c.kt)(a.Fragment,null,"Specification",(0,c.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),s=e=>(0,c.kt)(a.Fragment,null,(0,c.kt)("span",{className:"badge badge--"+e.class},e.text)),y={toc:m,Bullet:d,SpecifiedBy:u,Badge:s},f="wrapper";function h(e){let{components:t,...n}=e;return(0,c.kt)(f,(0,r.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"The different statuses a MerchantPaymentProduct can have"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-graphql"},"enum MerchantPaymentProductType {\n  InternalDirectDebit\n  Check\n}\n")),(0,c.kt)("h3",{id:"values"},"Values"),(0,c.kt)("h4",{id:"code-style-fontweight-normal-merchantpaymentproducttypebinternaldirectdebitbcode"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"MerchantPaymentProductType.",(0,c.kt)("b",null,"InternalDirectDebit")))),(0,c.kt)("blockquote",null),(0,c.kt)("h4",{id:"code-style-fontweight-normal-merchantpaymentproducttypebcheckbcode"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"MerchantPaymentProductType.",(0,c.kt)("b",null,"Check")))),(0,c.kt)("blockquote",null),(0,c.kt)("h3",{id:"member-of"},"Member of"),(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"/api-reference/objects/check-merchant-payment-product"},(0,c.kt)("inlineCode",{parentName:"a"},"CheckMerchantPaymentProduct")),"  ",(0,c.kt)(s,{class:"secondary",text:"object",mdxType:"Badge"}),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"p",href:"/api-reference/objects/internal-direct-debit-merchant-payment-product"},(0,c.kt)("inlineCode",{parentName:"a"},"InternalDirectDebitMerchantPaymentProduct")),"  ",(0,c.kt)(s,{class:"secondary",text:"object",mdxType:"Badge"}),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"p",href:"/api-reference/interfaces/merchant-payment-product"},(0,c.kt)("inlineCode",{parentName:"a"},"MerchantPaymentProduct")),"  ",(0,c.kt)(s,{class:"secondary",text:"interface",mdxType:"Badge"})))}h.isMDXComponent=!0}}]);