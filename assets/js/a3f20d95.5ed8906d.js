"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[67141],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),l=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,h=u["".concat(s,".").concat(m)]||u[m]||p[m]||a;return n?o.createElement(h,i(i({ref:t},d),{},{components:n})):o.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},501:(e,t,n)=>{n.d(t,{ZP:()=>c});var o=n(83117),r=(n(67294),n(3905));const a={toc:[]},i="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(i,(0,o.Z)({},a,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Individual (natural person) or legal entity (legal person) who owns and is responsible for the funds in a Swan account."))}c.isMDXComponent=!0},73488:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var o=n(83117),r=(n(67294),n(3905)),a=n(501);const i={title:"Account holders"},c="Account holders",s={unversionedId:"topics/onboarding/account-holders/index",id:"topics/onboarding/account-holders/index",title:"Account holders",description:"*",source:"@site/docs/topics/onboarding/account-holders/index.mdx",sourceDirName:"topics/onboarding/account-holders",slug:"/topics/onboarding/account-holders/",permalink:"/topics/onboarding/account-holders/",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/topics/onboarding/account-holders/index.mdx",tags:[],version:"current",frontMatter:{title:"Account holders"},sidebar:"docSidebar",previous:{title:"Sandbox",permalink:"/topics/onboarding/documents/sandbox"},next:{title:"Add account for existing account holder",permalink:"/topics/onboarding/account-holders/guide-add-additional-account"}},l={},d=[{value:"Verifying account holders",id:"verifying-account-holders",level:2},{value:"One account holder, multiple accounts",id:"verifying-account-holders-multi-account",level:3},{value:"Verification process",id:"verification-process",level:2},{value:"Components",id:"verification-process-components",level:3},{value:"Account holder verification statuses",id:"verification-process-statuses",level:3},{value:"Sequence diagram",id:"verification-process-diagram",level:3},{value:"Guides",id:"guides",level:2}],u={toc:d},p="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"account-holders"},"Account holders"),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Account holder")," ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)(a.ZP,{mdxType:"AccountHolderDefinition"}))),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Account holders can be ",(0,r.kt)("strong",{parentName:"p"},"individuals")," or ",(0,r.kt)("strong",{parentName:"p"},"companies")," (considered ",(0,r.kt)("em",{parentName:"p"},"legal entities"),"), and account holders can have as many Swan accounts as they need.\nIn order for funds to be stored in a Swan account, they must be associated with an account holder."),(0,r.kt)("p",null,"As a result of the onboarding process, ",(0,r.kt)("strong",{parentName:"p"},"users become account holders"),"."),(0,r.kt)("h2",{id:"verifying-account-holders"},"Verifying account holders"),(0,r.kt)("p",null,"As a partner and project owner, you choose who can have Swan accounts within your project."),(0,r.kt)("p",null,"However, regulations require ",(0,r.kt)("strong",{parentName:"p"},"Swan to verify all of your account holders"),", and to keep track of them for the lifetime of the account.\nTherefore, Swan verifies each user before the account holder and account objects are created in your Swan project.\nThis verification is often referred to as ",(0,r.kt)("strong",{parentName:"p"},"Know Your Customer (KYC)")," or ",(0,r.kt)("strong",{parentName:"p"},"Know Your Business (KYB)"),"."),(0,r.kt)("admonition",{title:"Verification responsibility",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"One benefit of working with Swan is that Swan is responsible for this process.\nHowever, if it is vital that you to perform KYC and KYB processes yourself, please send an email to ",(0,r.kt)("a",{parentName:"p",href:"mailto:support@swan.io"},"support@swan.io")," with a detailed explanation.")),(0,r.kt)("h3",{id:"verifying-account-holders-multi-account"},"One account holder, multiple accounts"),(0,r.kt)("p",null,"For company accounts, you can open multiple accounts for the same account holder.\nIn this case, Swan only needs to perform identity verification (Know Your Business ","[KYB]"," verification) if a KYB has not been performed within the last three months."),(0,r.kt)("p",null,"Follow the guide to ",(0,r.kt)("a",{parentName:"p",href:"/topics/onboarding/account-holders/guide-add-additional-account"},"add additional accounts")," for an existing account holder."),(0,r.kt)("h2",{id:"verification-process"},"Verification process"),(0,r.kt)("p",null,"The verification process for a new account holder is thorough, and Swan provides a streamlined process through which each account holder proves they're who they claim to be."),(0,r.kt)("p",null,"Account holders can access their account immediately after creation.\nHowever, while the verification is in progress, there are limitations on the account.\nIBANs might be issued before limitations are removed from the account.\nLearn more in ",(0,r.kt)("a",{parentName:"p",href:"https://docs.swan.io/concept/iban/iban-issuing"},"IBAN issuing"),"."),(0,r.kt)("h3",{id:"verification-process-components"},"Components"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Onboarding"),": Process is finalized for either an ",(0,r.kt)("a",{parentName:"li",href:"/topics/onboarding/individual/"},(0,r.kt)("strong",{parentName:"a"},"individual"))," or a ",(0,r.kt)("a",{parentName:"li",href:"/topics/onboarding/company/"},(0,r.kt)("strong",{parentName:"a"},"company")),", which creates an ",(0,r.kt)("em",{parentName:"li"},"account holder"),", an ",(0,r.kt)("em",{parentName:"li"},"account"),", and a ",(0,r.kt)("em",{parentName:"li"},"user"),"."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Identity verification"),": Newly-created ",(0,r.kt)("a",{parentName:"li",href:"/topics/onboarding/individual/#id-verification-recommendations"},(0,r.kt)("strong",{parentName:"a"},"individual"))," or ",(0,r.kt)("a",{parentName:"li",href:"/topics/onboarding/company/#id-verification-recommendations"},(0,r.kt)("strong",{parentName:"a"},"company"))," account holder completes identity verification with an ID document and a picture or video."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Document collection"),": Swan collects ",(0,r.kt)("a",{parentName:"li",href:"/topics/onboarding/documents/"},(0,r.kt)("strong",{parentName:"a"},"required documents")),"."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Review"),": Swan reviews onboarding, identity verification, and collected documents.")),(0,r.kt)("p",null,"After Swan ",(0,r.kt)("strong",{parentName:"p"},"validates the review"),", the account holder is verified and the restrictions on their account are lifted, meaning they're no longer limited to 150\u20ac in outgoing payments.\nTheir account will also receive its primary IBAN."),(0,r.kt)("admonition",{title:"User flow diagram",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"To understand more about your user's verification experience, refer to the ",(0,r.kt)("a",{parentName:"p",href:"/topics/onboarding/support"},"user flow diagram for identity verification"),".")),(0,r.kt)("h3",{id:"verification-process-statuses"},"Account holder verification statuses"),(0,r.kt)("mermaid",{value:"%%{ init: { 'flowchart': { 'curve': 'linear' } } }%%\nflowchart LR\n    VR((Verification<br/>requested)) -.-> NS[NotStarted]\n    NS -.-> W[WaitingForInformation]\n    W -.-> P[Pending]\n    P --\x3e V[Verified]\n    P --\x3e RF[Refused]\n    subgraph F[Final status]\n        V\n        RF\n    end\n    style VR fill:#D4D3D5,stroke:#514F59\n    style F fill:#fffdf4,stroke:#cca922"}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Verification status"),(0,r.kt)("th",{parentName:"tr",align:null},"Explanation"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"NotStarted")),(0,r.kt)("td",{parentName:"tr",align:null},"Verification process hasn't started yet")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"WaitingForInformation")),(0,r.kt)("td",{parentName:"tr",align:null},"Swan is waiting for information from the account holder, such as a document or for the account holder to complete identity verification")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Pending")),(0,r.kt)("td",{parentName:"tr",align:null},"Swan has begun their review")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Verified")),(0,r.kt)("td",{parentName:"tr",align:null},"Swan verified the account holder and the process is complete")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Refused")),(0,r.kt)("td",{parentName:"tr",align:null},"Swan won't onboard this account holder")))),(0,r.kt)("h3",{id:"verification-process-diagram"},"Sequence diagram"),(0,r.kt)("p",null,"This diagram ",(0,r.kt)("strong",{parentName:"p"},"details a common flow")," of how Swan, the account holder, and you interact during verification.\nYour integration might flow differently."),(0,r.kt)("mermaid",{value:"sequenceDiagram\nparticipant S as Swan\nparticipant P as Partner\nparticipant AH as Account<br/>holder\nparticipant ID as Identity<br/>verification<br/>provider\n    rect rgb(237,223,251)\n    P ->> S: Creates onboarding link\n    S --\x3e> P: Returns onboarding object\n    P ->> AH: Sends onboarding link\n    AH --\x3e> S: Completes onboarding\n    end\n    rect rgb(253,235,219)\n    S ->> AH: Sends text message inviting the account<br/>holder to complete identity verification\n    AH --\x3e> ID: Provides identity verification provider<br/>with required elements\n    ID ->> ID: Verifies identity\n    ID ->> S: Communicates result of identity verification\n    end\n    rect rgb(255,246,212)\n    alt Partner provides documents\n        S ->> P: Sends webhook about missing supporting documents\n        P ->> AH: Requests documents\n        AH --\x3e> P: Provides documents\n        P --\x3e>S: Uploads documents with the API\n    else Account holder provides documents\n        S ->> AH: Sends email requesting supporting documents\n        AH --\x3e> S: Uploads documents to banking interface\n    end\n    end\n    rect rgb(250,217,233)\n    S ->> S: Swan reviews identity<br/>verification and documents\n    end"}),(0,r.kt)("h2",{id:"guides"},"Guides"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/topics/onboarding/overview/guide-get-onboarding-info"},"Montior onboarding to track the verification process")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/topics/onboarding/account-holders/guide-add-additional-account"},"Add an account for an existing account holder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/topics/onboarding/account-holders/sandbox"},"Sandbox"))))}m.isMDXComponent=!0}}]);