"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[45024],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),u=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(l.Provider,{value:n},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(t),d=r,m=c["".concat(l,".").concat(d)]||c[d]||g[d]||o;return t?a.createElement(m,i(i({ref:n},p),{},{components:t})):a.createElement(m,i({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[c]="string"==typeof e?e:r,i[1]=s;for(var u=2;u<o;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},97193:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var a=t(83117),r=(t(67294),t(3905));const o={title:"Get transaction information"},i="Get transaction information",s={unversionedId:"topics/payments/overview/guide-get-transaction-info",id:"topics/payments/overview/guide-get-transaction-info",title:"Get transaction information",description:"You can query information about multiple transactions using the API.",source:"@site/docs/topics/payments/overview/guide-get-transaction-info.mdx",sourceDirName:"topics/payments/overview",slug:"/topics/payments/overview/guide-get-transaction-info",permalink:"/topics/payments/overview/guide-get-transaction-info",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/topics/payments/overview/guide-get-transaction-info.mdx",tags:[],version:"current",frontMatter:{title:"Get transaction information"},sidebar:"docSidebar",previous:{title:"Retrieve a payment ID",permalink:"/topics/payments/overview/guide-retrieve-payment-id"},next:{title:"Retrieve a transaction ID",permalink:"/topics/payments/overview/guide-retrieve-transaction-id"}},l={},u=[{value:"Multiple transactions",id:"multiple-transactions",level:2},{value:"Query",id:"query",level:3},{value:"Payload",id:"payload",level:3},{value:"Single transaction",id:"single-transaction",level:2},{value:"Query",id:"query-1",level:3},{value:"Payload",id:"payload-1",level:3}],p={toc:u},c="wrapper";function g(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"get-transaction-information"},"Get transaction information"),(0,r.kt)("p",null,"You can query information about multiple transactions ",(0,r.kt)("strong",{parentName:"p"},"using the API"),".\nYou might also query information about a single transaction."),(0,r.kt)("p",null,"Transaction information is also availabile on ",(0,r.kt)("strong",{parentName:"p"},"Dashboard")," > ",(0,r.kt)("strong",{parentName:"p"},"Data")," > ",(0,r.kt)("strong",{parentName:"p"},"Transactions"),"."),(0,r.kt)("admonition",{title:"Prerequisites",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You need a ",(0,r.kt)("strong",{parentName:"p"},"project access token")," run these queries.")),(0,r.kt)("h2",{id:"multiple-transactions"},"Multiple transactions"),(0,r.kt)("p",null,"Get information about multiple transactions using the API.\nThis sample queries the project's ",(0,r.kt)("inlineCode",{parentName:"p"},"Booked")," transactions."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Add the ",(0,r.kt)("inlineCode",{parentName:"li"},"transactions")," query."),(0,r.kt)("li",{parentName:"ol"},"Add all the information you'd like to review.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The sample query uses several ",(0,r.kt)("inlineCode",{parentName:"li"},"transactions")," query options, including filtering for only ",(0,r.kt)("inlineCode",{parentName:"li"},"Booked")," transactions and adding the transaction type."))),(0,r.kt)("li",{parentName:"ol"},"Add optional messages to the success payload, either for validation or in case of rejection.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The sample query adds a more thorough ",(0,r.kt)("inlineCode",{parentName:"li"},"Booked")," payload."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"\u25b6 Run")," your query.")),(0,r.kt)("h3",{id:"query"},"Query"),(0,r.kt)("p",null,"\ud83d\udd0e ",(0,r.kt)("a",{parentName:"p",href:"https://explorer.swan.io?query=cXVlcnkgQm9va2VkVHJhbnNhY3Rpb25zIHsKICB0cmFuc2FjdGlvbnMoZmlsdGVyczogeyBzdGF0dXM6IEJvb2tlZCB9KSB7CiAgICBlZGdlcyB7CiAgICAgIG5vZGUgewogICAgICAgIGFtb3VudCB7CiAgICAgICAgICBjdXJyZW5jeQogICAgICAgICAgdmFsdWUKICAgICAgICB9CiAgICAgICAgc3RhdHVzSW5mbyB7CiAgICAgICAgICBzdGF0dXMKICAgICAgICAgIC4uLiBvbiBCb29rZWRUcmFuc2FjdGlvblN0YXR1c0luZm8gewogICAgICAgICAgICBfX3R5cGVuYW1lCiAgICAgICAgICAgIGJvb2tpbmdEYXRlCiAgICAgICAgICAgIHN0YXR1cwogICAgICAgICAgICB2YWx1ZURhdGUKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgdHlwZQogICAgICB9CiAgICB9CiAgICB0b3RhbENvdW50CiAgfQp9Cg%3D%3D&tab=api"},"Open the query in API Explorer")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql",metastring:"{2,11-15,18} showLineNumbers","{2,11-15,18}":!0,showLineNumbers:!0},"query BookedTransactions {\n  transactions(filters: { status: Booked }) {\n    edges {\n      node {\n        amount {\n          currency\n          value\n        }\n        statusInfo {\n          status\n          ... on BookedTransactionStatusInfo {\n            __typename\n            bookingDate\n            status\n            valueDate\n          }\n        }\n        type\n      }\n    }\n    totalCount\n  }\n}\n\n")),(0,r.kt)("h3",{id:"payload"},"Payload"),(0,r.kt)("p",null,"Review all ",(0,r.kt)("inlineCode",{parentName:"p"},"Booked")," transactions for your project and the type of transaction."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"{8-9,12-15,17,23-24,27-30,32,36} showLineNumbers","{8-9,12-15,17,23-24,27-30,32,36}":!0,showLineNumbers:!0},'{\n  "data": {\n    "transactions": {\n      "edges": [\n        {\n          "node": {\n            "amount": {\n              "currency": "EUR",\n              "value": "250.00"\n            },\n            "statusInfo": {\n              "status": "Booked",\n              "__typename": "BookedTransactionStatusInfo",\n              "bookingDate": "2023-05-03T12:34:05.320Z",\n              "valueDate": "2023-05-03T12:34:05.320Z"\n            },\n            "type": "SepaCreditTransferIn"\n          }\n        },\n        {\n          "node": {\n            "amount": {\n              "currency": "EUR",\n              "value": "1000.00"\n            },\n            "statusInfo": {\n              "status": "Booked",\n              "__typename": "BookedTransactionStatusInfo",\n              "bookingDate": "2023-03-30T13:24:31.962Z",\n              "valueDate": "2023-03-30T13:24:31.962Z"\n            },\n            "type": "SepaInstantCreditTransferIn"\n          }\n        }\n      ],\n      "totalCount": 2\n    }\n  }\n}\n')),(0,r.kt)("h2",{id:"single-transaction"},"Single transaction"),(0,r.kt)("p",null,"Get information about a single transaction using the API."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"First, ",(0,r.kt)("a",{parentName:"li",href:"/topics/payments/overview/guide-retrieve-transaction-id"},"retrieve the ID")," for the transaction you're querying."),(0,r.kt)("li",{parentName:"ol"},"Add the ",(0,r.kt)("inlineCode",{parentName:"li"},"transaction")," query."),(0,r.kt)("li",{parentName:"ol"},"Enter the transaction ID retrieved in step 1."),(0,r.kt)("li",{parentName:"ol"},"Add all the information you'd like to review.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The sample query uses several ",(0,r.kt)("inlineCode",{parentName:"li"},"transaction")," query options, including the counterparty, custom label, and reference."))),(0,r.kt)("li",{parentName:"ol"},"Add optional messages to the success payload, either for validation or in case of rejection."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"\u25b6 Run")," your query.")),(0,r.kt)("h3",{id:"query-1"},"Query"),(0,r.kt)("p",null,"\ud83d\udd0e ",(0,r.kt)("a",{parentName:"p",href:"https://explorer.swan.io?query=cXVlcnkgVHJhbnNhY3Rpb25JbmZvIHsKICB0cmFuc2FjdGlvbihpZDogIiRUUkFOU0FDVElPTl9JRCIpIHsKICAgIGFjY291bnQgewogICAgICBJQkFOCiAgICB9CiAgICBhbW91bnQgewogICAgICBjdXJyZW5jeQogICAgICB2YWx1ZQogICAgfQogICAgYm9va2VkQmFsYW5jZUFmdGVyIHsKICAgICAgY3VycmVuY3kKICAgICAgdmFsdWUKICAgIH0KICAgIGNvdW50ZXJwYXJ0eQogICAgbGFiZWwKICAgIHJlZmVyZW5jZQogICAgc3RhdHVzSW5mbyB7CiAgICAgIHN0YXR1cwogICAgfQogICAgdHlwZQogICAgaWQKICAgIHVwZGF0ZWRBdAogIH0KfQo%3D&tab=api"},"Open the query in API Explorer")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql",metastring:"{2,14-16} showLineNumbers","{2,14-16}":!0,showLineNumbers:!0},'query TransactionInfo {\n  transaction(id: "$TRANSACTION_ID") {\n    account {\n      IBAN\n    }\n    amount {\n      currency\n      value\n    }\n    bookedBalanceAfter {\n      currency\n      value\n    }\n    counterparty\n    label\n    reference\n    statusInfo {\n      status\n    }\n    type\n    id\n    updatedAt\n  }\n}\n')),(0,r.kt)("h3",{id:"payload-1"},"Payload"),(0,r.kt)("p",null,"View all the requested information about the single transaction."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"{5,7-9,11-13,15-19} showLineNumbers","{5,7-9,11-13,15-19}":!0,showLineNumbers:!0},'{\n  "data": {\n    "transaction": {\n      "account": {\n        "IBAN": "FR7699999001001383799322594"\n      },\n      "amount": {\n        "currency": "EUR",\n        "value": "250.00"\n      },\n      "bookedBalanceAfter": {\n        "currency": "EUR",\n        "value": "1350.00"\n      },\n      "counterparty": "Catharijne Janssen",\n      "label": "Sample Payment",\n      "reference": "internal-note-765",\n      "statusInfo": {\n        "status": "Booked"\n      },\n      "type": "SepaCreditTransferIn",\n      "id": "$TRANSACTION_ID",\n      "updatedAt": "2023-05-03T12:34:05.339Z"\n    }\n  }\n}\n')))}g.isMDXComponent=!0}}]);