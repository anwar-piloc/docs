"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[7285],{3905:(e,a,t)=>{t.d(a,{Zo:()=>i,kt:()=>b});var o=t(67294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function n(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?n(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function d(e,a){if(null==e)return{};var t,o,r=function(e,a){if(null==e)return{};var t,o,r={},n=Object.keys(e);for(o=0;o<n.length;o++)t=n[o],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)t=n[o],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),s=function(e){var a=o.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):c(c({},a),e)),t},i=function(e){var a=s(e.components);return o.createElement(l.Provider,{value:a},e.children)},y="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},p=o.forwardRef((function(e,a){var t=e.components,r=e.mdxType,n=e.originalType,l=e.parentName,i=d(e,["components","mdxType","originalType","parentName"]),y=s(t),p=r,b=y["".concat(l,".").concat(p)]||y[p]||u[p]||n;return t?o.createElement(b,c(c({ref:a},i),{},{components:t})):o.createElement(b,c({ref:a},i))}));function b(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var n=t.length,c=new Array(n);c[0]=p;var d={};for(var l in a)hasOwnProperty.call(a,l)&&(d[l]=a[l]);d.originalType=e,d[y]="string"==typeof e?e:r,c[1]=d;for(var s=2;s<n;s++)c[s]=t[s];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3814:(e,a,t)=>{t.r(a),t.d(a,{Badge:()=>u,Bullet:()=>i,Details:()=>b,SpecifiedBy:()=>y,assets:()=>s,contentTitle:()=>d,default:()=>f,frontMatter:()=>c,metadata:()=>l,toc:()=>p});var o=t(87462),r=t(67294),n=t(3905);const c={id:"resume-physical-card-payload",title:"ResumePhysicalCardPayload",hide_table_of_contents:!1},d=void 0,l={unversionedId:"api-reference/unions/resume-physical-card-payload",id:"api-reference/unions/resume-physical-card-payload",title:"ResumePhysicalCardPayload",description:"No description",source:"@site/docs/api-reference/unions/resume-physical-card-payload.mdx",sourceDirName:"api-reference/unions",slug:"/api-reference/unions/resume-physical-card-payload",permalink:"/api-reference/unions/resume-physical-card-payload",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api-reference/unions/resume-physical-card-payload.mdx",tags:[],version:"current",frontMatter:{id:"resume-physical-card-payload",title:"ResumePhysicalCardPayload",hide_table_of_contents:!1}},s={},i=()=>(0,n.kt)(r.Fragment,null,(0,n.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),y=e=>(0,n.kt)(r.Fragment,null,"Specification",(0,n.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,n.kt)(r.Fragment,null,(0,n.kt)("span",{className:e.class},e.text)),p=[{value:"Possible types",id:"possible-types",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>ResumePhysicalCardPayload.<b>ResumePhysicalCardSuccessPayload</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-resumephysicalcardpayloadbresumephysicalcardsuccesspayloadbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ResumePhysicalCardPayload.<b>ForbiddenRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-resumephysicalcardpayloadbforbiddenrejectionbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ResumePhysicalCardPayload.<b>CardNotFoundRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-resumephysicalcardpayloadbcardnotfoundrejectionbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ResumePhysicalCardPayload.<b>UserNotCardHolderRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-resumephysicalcardpayloadbusernotcardholderrejectionbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ResumePhysicalCardPayload.<b>PhysicalCardNotFoundRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-resumephysicalcardpayloadbphysicalcardnotfoundrejectionbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ResumePhysicalCardPayload.<b>PhysicalCardWrongStatusRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-resumephysicalcardpayloadbphysicalcardwrongstatusrejectionbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>ResumePhysicalCardPayload.<b>ValidationRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-resumephysicalcardpayloadbvalidationrejectionbcode-",level:4},{value:"Returned by",id:"returned-by",level:3}],b=e=>{let{dataOpen:a,dataClose:t,children:c,startOpen:d=!1}=e;const[l,s]=(0,r.useState)(d);return(0,n.kt)("details",(0,o.Z)({},l?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,n.kt)("summary",{onClick:e=>{e.preventDefault(),s((e=>!e))},style:{listStyle:"none"}},l?a:t),l&&c)},h={Bullet:i,SpecifiedBy:y,Badge:u,toc:p,Details:b},m="wrapper";function f(e){let{components:a,...t}=e;return(0,n.kt)(m,(0,o.Z)({},h,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"No description"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-graphql"},"union ResumePhysicalCardPayload = ResumePhysicalCardSuccessPayload | ForbiddenRejection | CardNotFoundRejection | UserNotCardHolderRejection | PhysicalCardNotFoundRejection | PhysicalCardWrongStatusRejection | ValidationRejection\n")),(0,n.kt)("h3",{id:"possible-types"},"Possible types"),(0,n.kt)("h4",{id:"code-style-fontweight-normal-resumephysicalcardpayloadbresumephysicalcardsuccesspayloadbcode-"},(0,n.kt)("a",{parentName:"h4",href:"/api-reference/objects/resume-physical-card-success-payload"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"ResumePhysicalCardPayload.",(0,n.kt)("b",null,"ResumePhysicalCardSuccessPayload")))," ",(0,n.kt)(u,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,n.kt)("blockquote",null),(0,n.kt)("h4",{id:"code-style-fontweight-normal-resumephysicalcardpayloadbforbiddenrejectionbcode-"},(0,n.kt)("a",{parentName:"h4",href:"/api-reference/objects/forbidden-rejection"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"ResumePhysicalCardPayload.",(0,n.kt)("b",null,"ForbiddenRejection")))," ",(0,n.kt)(u,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,n.kt)("blockquote",null),(0,n.kt)("h4",{id:"code-style-fontweight-normal-resumephysicalcardpayloadbcardnotfoundrejectionbcode-"},(0,n.kt)("a",{parentName:"h4",href:"/api-reference/objects/card-not-found-rejection"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"ResumePhysicalCardPayload.",(0,n.kt)("b",null,"CardNotFoundRejection")))," ",(0,n.kt)(u,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Rejection returned if the card was not found or if the user does not have the rights to know that the account exists")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-resumephysicalcardpayloadbusernotcardholderrejectionbcode-"},(0,n.kt)("a",{parentName:"h4",href:"/api-reference/objects/user-not-card-holder-rejection"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"ResumePhysicalCardPayload.",(0,n.kt)("b",null,"UserNotCardHolderRejection")))," ",(0,n.kt)(u,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Rejection returned when the User is not the Card Holder")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-resumephysicalcardpayloadbphysicalcardnotfoundrejectionbcode-"},(0,n.kt)("a",{parentName:"h4",href:"/api-reference/objects/physical-card-not-found-rejection"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"ResumePhysicalCardPayload.",(0,n.kt)("b",null,"PhysicalCardNotFoundRejection")))," ",(0,n.kt)(u,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Rejection returned when the Physical Card does not exist")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-resumephysicalcardpayloadbphysicalcardwrongstatusrejectionbcode-"},(0,n.kt)("a",{parentName:"h4",href:"/api-reference/objects/physical-card-wrong-status-rejection"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"ResumePhysicalCardPayload.",(0,n.kt)("b",null,"PhysicalCardWrongStatusRejection")))," ",(0,n.kt)(u,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Rejection returned when the Physical Card is not the expected status")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-resumephysicalcardpayloadbvalidationrejectionbcode-"},(0,n.kt)("a",{parentName:"h4",href:"/api-reference/objects/validation-rejection"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"ResumePhysicalCardPayload.",(0,n.kt)("b",null,"ValidationRejection")))," ",(0,n.kt)(u,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Rejection returned if an input contains invalid data")),(0,n.kt)("h3",{id:"returned-by"},"Returned by"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/api-reference/mutations/resume-physical-card"},(0,n.kt)("inlineCode",{parentName:"a"},"resumePhysicalCard")),"  ",(0,n.kt)(u,{class:"badge badge--secondary",text:"mutation",mdxType:"Badge"})))}f.isMDXComponent=!0}}]);