"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[47730],{3905:(e,t,o)=>{o.d(t,{Zo:()=>s,kt:()=>m});var a=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function c(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?c(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):c(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function d(e,t){if(null==e)return{};var o,a,n=function(e,t){if(null==e)return{};var o,a,n={},c=Object.keys(e);for(a=0;a<c.length;a++)o=c[a],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)o=c[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var i=a.createContext({}),l=function(e){var t=a.useContext(i),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},s=function(e){var t=l(e.components);return a.createElement(i.Provider,{value:t},e.children)},p="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var o=e.components,n=e.mdxType,c=e.originalType,i=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),p=l(o),u=n,m=p["".concat(i,".").concat(u)]||p[u]||b[u]||c;return o?a.createElement(m,r(r({ref:t},s),{},{components:o})):a.createElement(m,r({ref:t},s))}));function m(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=o.length,r=new Array(c);r[0]=u;var d={};for(var i in t)hasOwnProperty.call(t,i)&&(d[i]=t[i]);d.originalType=e,d[p]="string"==typeof e?e:n,r[1]=d;for(var l=2;l<c;l++)r[l]=o[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,o)}u.displayName="MDXCreateElement"},55843:(e,t,o)=>{o.r(t),o.d(t,{Badge:()=>b,Bullet:()=>s,Details:()=>m,SpecifiedBy:()=>p,assets:()=>l,contentTitle:()=>d,default:()=>g,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var a=o(87462),n=o(67294),c=o(3905);const r={id:"update-account-membership-payload",title:"UpdateAccountMembershipPayload",hide_table_of_contents:!1},d=void 0,i={unversionedId:"api-reference/unions/update-account-membership-payload",id:"api-reference/unions/update-account-membership-payload",title:"UpdateAccountMembershipPayload",description:"No description",source:"@site/docs/api-reference/unions/update-account-membership-payload.mdx",sourceDirName:"api-reference/unions",slug:"/api-reference/unions/update-account-membership-payload",permalink:"/api-reference/unions/update-account-membership-payload",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api-reference/unions/update-account-membership-payload.mdx",tags:[],version:"current",frontMatter:{id:"update-account-membership-payload",title:"UpdateAccountMembershipPayload",hide_table_of_contents:!1}},l={},s=()=>(0,c.kt)(n.Fragment,null,(0,c.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,c.kt)(n.Fragment,null,"Specification",(0,c.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),b=e=>(0,c.kt)(n.Fragment,null,(0,c.kt)("span",{className:e.class},e.text)),u=[{value:"Possible types",id:"possible-types",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>UpdateAccountMembershipPayload.<b>UpdateAccountMembershipSuccessPayload</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-updateaccountmembershippayloadbupdateaccountmembershipsuccesspayloadbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>UpdateAccountMembershipPayload.<b>AccountMembershipCannotBeUpdatedRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-updateaccountmembershippayloadbaccountmembershipcannotbeupdatedrejectionbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>UpdateAccountMembershipPayload.<b>AccountMembershipNotFoundRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-updateaccountmembershippayloadbaccountmembershipnotfoundrejectionbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>UpdateAccountMembershipPayload.<b>ForbiddenRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-updateaccountmembershippayloadbforbiddenrejectionbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>UpdateAccountMembershipPayload.<b>InvalidPhoneNumberRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-updateaccountmembershippayloadbinvalidphonenumberrejectionbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>UpdateAccountMembershipPayload.<b>PermissionCannotBeGrantedRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-updateaccountmembershippayloadbpermissioncannotbegrantedrejectionbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>UpdateAccountMembershipPayload.<b>UserNotAllowedToManageAccountMembershipRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-updateaccountmembershippayloadbusernotallowedtomanageaccountmembershiprejectionbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>UpdateAccountMembershipPayload.<b>ValidationRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-updateaccountmembershippayloadbvalidationrejectionbcode-",level:4},{value:"Returned by",id:"returned-by",level:3}],m=e=>{let{dataOpen:t,dataClose:o,children:r,startOpen:d=!1}=e;const[i,l]=(0,n.useState)(d);return(0,c.kt)("details",(0,a.Z)({},i?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,c.kt)("summary",{onClick:e=>{e.preventDefault(),l((e=>!e))},style:{listStyle:"none"}},i?t:o),i&&r)},y={Bullet:s,SpecifiedBy:p,Badge:b,toc:u,Details:m},h="wrapper";function g(e){let{components:t,...o}=e;return(0,c.kt)(h,(0,a.Z)({},y,o,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"No description"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-graphql"},"union UpdateAccountMembershipPayload = UpdateAccountMembershipSuccessPayload | AccountMembershipCannotBeUpdatedRejection | AccountMembershipNotFoundRejection | ForbiddenRejection | InvalidPhoneNumberRejection | PermissionCannotBeGrantedRejection | UserNotAllowedToManageAccountMembershipRejection | ValidationRejection\n")),(0,c.kt)("h3",{id:"possible-types"},"Possible types"),(0,c.kt)("h4",{id:"code-style-fontweight-normal-updateaccountmembershippayloadbupdateaccountmembershipsuccesspayloadbcode-"},(0,c.kt)("a",{parentName:"h4",href:"/api-reference/objects/update-account-membership-success-payload"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"UpdateAccountMembershipPayload.",(0,c.kt)("b",null,"UpdateAccountMembershipSuccessPayload")))," ",(0,c.kt)(b,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null),(0,c.kt)("h4",{id:"code-style-fontweight-normal-updateaccountmembershippayloadbaccountmembershipcannotbeupdatedrejectionbcode-"},(0,c.kt)("a",{parentName:"h4",href:"/api-reference/objects/account-membership-cannot-be-updated-rejection"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"UpdateAccountMembershipPayload.",(0,c.kt)("b",null,"AccountMembershipCannotBeUpdatedRejection")))," ",(0,c.kt)(b,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null),(0,c.kt)("h4",{id:"code-style-fontweight-normal-updateaccountmembershippayloadbaccountmembershipnotfoundrejectionbcode-"},(0,c.kt)("a",{parentName:"h4",href:"/api-reference/objects/account-membership-not-found-rejection"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"UpdateAccountMembershipPayload.",(0,c.kt)("b",null,"AccountMembershipNotFoundRejection")))," ",(0,c.kt)(b,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null),(0,c.kt)("h4",{id:"code-style-fontweight-normal-updateaccountmembershippayloadbforbiddenrejectionbcode-"},(0,c.kt)("a",{parentName:"h4",href:"/api-reference/objects/forbidden-rejection"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"UpdateAccountMembershipPayload.",(0,c.kt)("b",null,"ForbiddenRejection")))," ",(0,c.kt)(b,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null),(0,c.kt)("h4",{id:"code-style-fontweight-normal-updateaccountmembershippayloadbinvalidphonenumberrejectionbcode-"},(0,c.kt)("a",{parentName:"h4",href:"/api-reference/objects/invalid-phone-number-rejection"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"UpdateAccountMembershipPayload.",(0,c.kt)("b",null,"InvalidPhoneNumberRejection")))," ",(0,c.kt)(b,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Rejection returned if phone number is not well formatted")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-updateaccountmembershippayloadbpermissioncannotbegrantedrejectionbcode-"},(0,c.kt)("a",{parentName:"h4",href:"/api-reference/objects/permission-cannot-be-granted-rejection"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"UpdateAccountMembershipPayload.",(0,c.kt)("b",null,"PermissionCannotBeGrantedRejection")))," ",(0,c.kt)(b,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null),(0,c.kt)("h4",{id:"code-style-fontweight-normal-updateaccountmembershippayloadbusernotallowedtomanageaccountmembershiprejectionbcode-"},(0,c.kt)("a",{parentName:"h4",href:"/api-reference/objects/user-not-allowed-to-manage-account-membership-rejection"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"UpdateAccountMembershipPayload.",(0,c.kt)("b",null,"UserNotAllowedToManageAccountMembershipRejection")))," ",(0,c.kt)(b,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Rejection returned if a identity does not have enough permission to manage account membership")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-updateaccountmembershippayloadbvalidationrejectionbcode-"},(0,c.kt)("a",{parentName:"h4",href:"/api-reference/objects/validation-rejection"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"UpdateAccountMembershipPayload.",(0,c.kt)("b",null,"ValidationRejection")))," ",(0,c.kt)(b,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Rejection returned if an input contains invalid data")),(0,c.kt)("h3",{id:"returned-by"},"Returned by"),(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"/api-reference/mutations/update-account-membership"},(0,c.kt)("inlineCode",{parentName:"a"},"updateAccountMembership")),"  ",(0,c.kt)(b,{class:"badge badge--secondary",text:"mutation",mdxType:"Badge"})))}g.isMDXComponent=!0}}]);