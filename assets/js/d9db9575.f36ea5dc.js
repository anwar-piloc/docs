"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[93564],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>g});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),s=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=s(e.components);return o.createElement(c.Provider,{value:n},e.children)},l="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),l=s(t),m=r,g=l["".concat(c,".").concat(m)]||l[m]||p[m]||a;return t?o.createElement(g,i(i({ref:n},d),{},{components:t})):o.createElement(g,i({ref:n},d))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=m;var u={};for(var c in n)hasOwnProperty.call(n,c)&&(u[c]=n[c]);u.originalType=e,u[l]="string"==typeof e?e:r,i[1]=u;for(var s=2;s<a;s++)i[s]=t[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},541:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>u,toc:()=>s});var o=t(87462),r=(t(67294),t(3905));const a={title:"Get a list of required documents"},i="Get a list of required documents",u={unversionedId:"topics/onboarding/documents/guide-list-documents",id:"topics/onboarding/documents/guide-list-documents",title:"Get a list of required documents",description:"Get a list of required documents for your onboarding using the API by adding information about collecting supporting documents to the success payload when creating an onboarding link.",source:"@site/docs/topics/onboarding/documents/guide-list-documents.mdx",sourceDirName:"topics/onboarding/documents",slug:"/topics/onboarding/documents/guide-list-documents",permalink:"/topics/onboarding/documents/guide-list-documents",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/topics/onboarding/documents/guide-list-documents.mdx",tags:[],version:"current",frontMatter:{title:"Get a list of required documents"},sidebar:"docSidebar",previous:{title:"Supporting document collection",permalink:"/topics/onboarding/documents/"},next:{title:"Upload a document",permalink:"/topics/onboarding/documents/guide-upload-document"}},c={},s=[{value:"Guide",id:"guide",level:2},{value:"API mutation",id:"api-mutation",level:2},{value:"Payload",id:"payload",level:2}],d={toc:s},l="wrapper";function p(e){let{components:n,...t}=e;return(0,r.kt)(l,(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"get-a-list-of-required-documents"},"Get a list of required documents"),(0,r.kt)("p",null,"Get a list of required documents for your onboarding using the API by adding information about collecting supporting documents to the success payload when creating an onboarding link."),(0,r.kt)("h2",{id:"guide"},"Guide"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create your onboarding link for an ",(0,r.kt)("a",{parentName:"li",href:"/topics/onboarding/individual/guide-create-onboarding"},"individual")," or a ",(0,r.kt)("a",{parentName:"li",href:"/topics/onboarding/company/guide-create-onboarding"},"company"),"."),(0,r.kt)("li",{parentName:"ol"},"Add the ",(0,r.kt)("inlineCode",{parentName:"li"},"supportingDocumentCollection")," field and the ",(0,r.kt)("inlineCode",{parentName:"li"},"requiredSupportingDocumentPurposes")," subfield to the success payload.\nYou might also choose to add collection status info."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"\u25b6 Run")," your mutation.")),(0,r.kt)("h2",{id:"api-mutation"},"API mutation"),(0,r.kt)("admonition",{title:"Partial mutation",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Add this information to the full mutation when creating an ",(0,r.kt)("a",{parentName:"p",href:"/topics/onboarding/individual/guide-create-onboarding"},"individual")," or ",(0,r.kt)("a",{parentName:"p",href:"/topics/onboarding/company/guide-create-onboarding"},"company")," onboarding link.\nNote that the example features company onboarding.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql",metastring:"{4,12-15,17-18} showLineNumbers","{4,12-15,17-18}":!0,showLineNumbers:!0},"mutation ListRequiredDocuments {\n  onboardCompanyAccountHolder {\n  {...}\n    ... on OnboardCompanyAccountHolderSuccessPayload {\n      __typename\n      onboarding {\n        id\n        onboardingState\n        statusInfo {\n          status\n        }\n        supportingDocumentCollection {\n          requiredSupportingDocumentPurposes {\n            acceptableSupportingDocumentTypes\n            name\n          }\n          statusInfo {\n            status\n          }\n        }\n      }\n    }\n  {...}\n  }\n}\n\n")),(0,r.kt)("h2",{id:"payload"},"Payload"),(0,r.kt)("p",null,"Review this full success payload for a company account holder onboarding."),(0,r.kt)("p",null,"Notice the documents listed (lines 11-23), as well as the collection status ",(0,r.kt)("inlineCode",{parentName:"p"},"WaitingForDocument")," (line 27)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"{11-12,14-15,17,20-21,23,26-27} showLineNumbers","{11-12,14-15,17,20-21,23,26-27}":!0,showLineNumbers:!0},'{\n  "data": {\n    "onboardCompanyAccountHolder": {\n      "__typename": "OnboardCompanyAccountHolderSuccessPayload",\n      "onboarding": {\n        "id": "$ONBOARDING_ID",\n        "onboardingState": "Ongoing",\n        "statusInfo": {\n          "status": "Valid"\n        },\n        "supportingDocumentCollection": {\n          "requiredSupportingDocumentPurposes": [\n            {\n              "acceptableSupportingDocumentTypes": [\n                "UBODeclaration"\n              ],\n              "name": "UBODeclaration"\n            },\n            {\n              "acceptableSupportingDocumentTypes": [\n                "SwornStatement"\n              ],\n              "name": "SwornStatement"\n            }\n          ],\n          "statusInfo": {\n            "status": "WaitingForDocument"\n          }\n        }\n      }\n    }\n  }\n}\n')))}p.isMDXComponent=!0}}]);