"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[65723],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,g=p["".concat(l,".").concat(m)]||p[m]||u[m]||i;return n?a.createElement(g,o(o({ref:t},d),{},{components:n})):a.createElement(g,o({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},22033:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={title:"Update card transaction settings"},o="Update card transaction settings",s={unversionedId:"topics/payments/cards/guide-update",id:"topics/payments/cards/guide-update",title:"Update card transaction settings",description:"ADD TO CARDS > GUIDE-UPDATE",source:"@site/docs/topics/payments/cards/guide-update.mdx",sourceDirName:"topics/payments/cards",slug:"/topics/payments/cards/guide-update",permalink:"/topics/payments/cards/guide-update",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/topics/payments/cards/guide-update.mdx",tags:[],version:"current",frontMatter:{title:"Update card transaction settings"}},l={},c=[{value:"Transaction settings options",id:"settings-transactions-options",level:2},{value:"Suspicions of fraud",id:"settings-transactions-fraud",level:2},{value:"API guide",id:"api-guide",level:2},{value:"Mutation",id:"settings-transactions-mutation",level:3},{value:"Payload",id:"settings-transactions-payload",level:3}],d={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"update-card-transaction-settings"},"Update card transaction settings"),(0,r.kt)("admonition",{title:"Card transactions",type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"ADD TO CARDS > GUIDE-UPDATE"),"\nTo update your card transaction settings, including the name, whether physical cards are allowed, and blocking the card, refer to the guide for updating card transaction settings.")),(0,r.kt)("p",null,"Card settings are ",(0,r.kt)("strong",{parentName:"p"},"valid for all payments")," linked to this card, whether they were made with a virtual, physical, or digital card."),(0,r.kt)("admonition",{title:"Card product",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"To update your ",(0,r.kt)("a",{parentName:"p",href:"/topics/cards/#card-product"},"card product")," settings, including the name, whether physical cards are allowed, and blocking the card, refer to the ",(0,r.kt)("a",{parentName:"p",href:"/topics/cards/overview/guide-update"},"guide for updating card product settings"),".")),(0,r.kt)("h2",{id:"settings-transactions-options"},"Transaction settings options"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cardContractExpiryDate"),":  Date you'd like the card to expire; leave empty if you don't want to set an expiration date",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"If you don't set an expiration date, the card will be renewed automatically in three years."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"international"),"*:  Allow payments outside of the account holder's country"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"withdrawal"),": Allow or disable cash withdrawals"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"nonMainCurrencyTransactions"),"*: Allow or disable transactions outside of the card's currency"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"eCommerce"),": Allow or disable transactions at eCommerce sites"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"monthlySpendingLimit"),": Fixed by the member within the limits set by Swan")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("mdxAdmonitionTitle",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"international")," & ",(0,r.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"nonMainCurrencyTransactions")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"international")," is disabled, payments can only be made in the account holder's country. They can still pay using other currencies. For example, a cardholder in France can only make payments in France, but in euros as well as other currencies."),(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"nonMainCurrencyTransactions")," is disabled, payments can be made in other countries, but not using other currencies. For example, a cardholder in France can make payments in euros in the United Kingdom, but not in the GBP (Pound Sterling)."))),(0,r.kt)("h2",{id:"settings-transactions-fraud"},"Suspicions of fraud"),(0,r.kt)("p",null,"At the slightest suspicion of fraud, updating ",(0,r.kt)("inlineCode",{parentName:"p"},"eCommerce")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," for just that card allows the account member to temporarily block all e-commerce payments.\nThe cardholder must then write to ",(0,r.kt)("a",{parentName:"p",href:"mailto:fraud@swan.io"},"fraud@swan.io"),", after which Swan can renew the card number."),(0,r.kt)("h2",{id:"api-guide"},"API guide"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Update all card settings by calling the ",(0,r.kt)("inlineCode",{parentName:"li"},"updateCard")," mutation."),(0,r.kt)("li",{parentName:"ol"},"When updating card settings, make sure you are authenticated with a user access token belonging to the correct account member."),(0,r.kt)("li",{parentName:"ol"},"Additionally, the account member must have the permission ",(0,r.kt)("inlineCode",{parentName:"li"},"canManageCards"),".",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The permission ",(0,r.kt)("inlineCode",{parentName:"li"},"canManageAccountMembership")," is optional."),(0,r.kt)("li",{parentName:"ul"},"Learn more about ",(0,r.kt)("a",{parentName:"li",href:"https://docs.swan.io/concept/account-membership#adding-and-viewing-cards"},"permissions and card management"),"."))),(0,r.kt)("li",{parentName:"ol"},"The request from this mutation returns a newly created consent resource containing the ",(0,r.kt)("inlineCode",{parentName:"li"},"consentUrl"),"."),(0,r.kt)("li",{parentName:"ol"},"The URL allows you to redirect the user making the modification to Swan's Strong Customer Authentication.")),(0,r.kt)("p",null,"After the consent process is completed, the card is updated and its attribute version is increased by one."),(0,r.kt)("h3",{id:"settings-transactions-mutation"},"Mutation"),(0,r.kt)("p",null,"\ud83d\udd0e ",(0,r.kt)("a",{parentName:"p",href:"https://explorer.swan.io?query=bXV0YXRpb24gdXBkYXRlQ2FyZFNldHRpbmdzIHsKICB1cGRhdGVDYXJkKAogICAgaW5wdXQ6IHsKICAgICAgY2FyZElkOiAiM2EyNWNkYjQtODJkOS00OThhLWE4MDUtNGUwZTg1NDVmZjJiIgogICAgICB3aXRoZHJhd2FsOiBmYWxzZQogICAgICBpbnRlcm5hdGlvbmFsOiBmYWxzZQogICAgICBub25NYWluQ3VycmVuY3lUcmFuc2FjdGlvbnM6IGZhbHNlCiAgICAgIGVDb21tZXJjZTogZmFsc2UKICAgICAgY29uc2VudFJlZGlyZWN0VXJsOiAiaHR0cHM6Ly9kb2NzLnN3YW4uaW8vIgogICAgfQogICkgewogICAgLi4uIG9uIFVwZGF0ZUNhcmRTdWNjZXNzUGF5bG9hZCB7CiAgICAgIF9fdHlwZW5hbWUKICAgICAgY29uc2VudCB7CiAgICAgICAgY29uc2VudFVybAogICAgICAgIGlkCiAgICAgIH0KICAgIH0KICB9Cn0K&tab=api"},"Open the mutation in API Explorer")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql",metastring:"{4,9} showLineNumbers","{4,9}":!0,showLineNumbers:!0},'mutation updateCardSettings {\n  updateCard(\n    input: {\n      cardId: "3a25cdb4-82d9-498a-a805-4e0e8545ff2b"\n      withdrawal: false\n      international: false\n      nonMainCurrencyTransactions: false\n      eCommerce: false\n      consentRedirectUrl: "https://docs.swan.io/"\n    }\n  ) {\n    ... on UpdateCardSuccessPayload {\n      __typename\n      consent {\n        consentUrl\n        id\n      }\n    }\n  }\n}\n')),(0,r.kt)("h3",{id:"settings-transactions-payload"},"Payload"),(0,r.kt)("p",null,"Open the ",(0,r.kt)("inlineCode",{parentName:"p"},"consentUrl")," returned by the mutation to consent to the update."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"{6,7} showLineNumbers","{6,7}":!0,showLineNumbers:!0},'{\n  "data": {\n    "updateCard": {\n      "__typename": "UpdateCardSuccessPayload",\n      "consent": {\n        "consentUrl": "$YOUR_CONSENT_URL",\n        "id": "$YOUR_CONSENT_ID"\n      }\n    }\n  }\n}\n')))}u.isMDXComponent=!0}}]);