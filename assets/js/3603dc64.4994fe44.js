"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[84101],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),m=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=m(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=m(n),d=a,h=u["".concat(i,".").concat(d)]||u[d]||p[d]||o;return n?r.createElement(h,s(s({ref:t},l),{},{components:n})):r.createElement(h,s({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[u]="string"==typeof e?e:a,s[1]=c;for(var m=2;m<o;m++)s[m]=n[m];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1246:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>d,Bullet:()=>u,SpecifiedBy:()=>p,assets:()=>m,contentTitle:()=>c,default:()=>f,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var r=n(83117),a=n(67294),o=n(3905);const s={id:"request-merchant-payment-methods",title:"requestMerchantPaymentMethods",hide_table_of_contents:!1},c=void 0,i={unversionedId:"api-reference/mutations/request-merchant-payment-methods",id:"api-reference/mutations/request-merchant-payment-methods",title:"requestMerchantPaymentMethods",description:"Request merchant payment methods for a merchant profile",source:"@site/docs/api-reference/mutations/request-merchant-payment-methods.mdx",sourceDirName:"api-reference/mutations",slug:"/api-reference/mutations/request-merchant-payment-methods",permalink:"/api-reference/mutations/request-merchant-payment-methods",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api-reference/mutations/request-merchant-payment-methods.mdx",tags:[],version:"current",frontMatter:{id:"request-merchant-payment-methods",title:"requestMerchantPaymentMethods",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"refund",permalink:"/api-reference/mutations/refund"},next:{title:"requestMerchantPaymentProducts",permalink:"/api-reference/mutations/request-merchant-payment-products"}},m={},l=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>requestMerchantPaymentMethods.<b>input</b></code><Bullet /><code>RequestMerchantPaymentMethodsInput!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-requestmerchantpaymentmethodsbinputbcoderequestmerchantpaymentmethodsinput--",level:4},{value:"Type",id:"type",level:3},{value:'<code>RequestMerchantPaymentMethodsPayload</code> <Badge class="secondary" text="union"/>',id:"requestmerchantpaymentmethodspayload-",level:4}],u=()=>(0,o.kt)(a.Fragment,null,(0,o.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,o.kt)(a.Fragment,null,"Specification",(0,o.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),d=e=>(0,o.kt)(a.Fragment,null,(0,o.kt)("span",{className:"badge badge--"+e.class},e.text)),h={toc:l,Bullet:u,SpecifiedBy:p,Badge:d},y="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(y,(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Request merchant payment methods for a merchant profile"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"requestMerchantPaymentMethods(\n  input: RequestMerchantPaymentMethodsInput!\n): RequestMerchantPaymentMethodsPayload\n")),(0,o.kt)("h3",{id:"arguments"},"Arguments"),(0,o.kt)("h4",{id:"code-style-fontweight-normal-requestmerchantpaymentmethodsbinputbcoderequestmerchantpaymentmethodsinput--"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"requestMerchantPaymentMethods.",(0,o.kt)("b",null,"input"))),(0,o.kt)(u,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/api-reference/inputs/request-merchant-payment-methods-input"},(0,o.kt)("inlineCode",{parentName:"a"},"RequestMerchantPaymentMethodsInput!"))," ",(0,o.kt)(d,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,o.kt)(d,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null),(0,o.kt)("h3",{id:"type"},"Type"),(0,o.kt)("h4",{id:"requestmerchantpaymentmethodspayload-"},(0,o.kt)("a",{parentName:"h4",href:"/api-reference/unions/request-merchant-payment-methods-payload"},(0,o.kt)("inlineCode",{parentName:"a"},"RequestMerchantPaymentMethodsPayload"))," ",(0,o.kt)(d,{class:"secondary",text:"union",mdxType:"Badge"})),(0,o.kt)("blockquote",null))}f.isMDXComponent=!0}}]);