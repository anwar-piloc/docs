"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[57511],{3905:(e,t,a)=>{a.d(t,{Zo:()=>b,kt:()=>y});var d=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(e);t&&(d=d.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,d)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,d,n=function(e,t){if(null==e)return{};var a,d,n={},o=Object.keys(e);for(d=0;d<o.length;d++)a=o[d],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(d=0;d<o.length;d++)a=o[d],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=d.createContext({}),l=function(e){var t=d.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},b=function(e){var t=l(e.components);return d.createElement(c.Provider,{value:t},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return d.createElement(d.Fragment,{},t)}},u=d.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),s=l(a),u=n,y=s["".concat(c,".").concat(u)]||s[u]||p[u]||o;return a?d.createElement(y,r(r({ref:t},b),{},{components:a})):d.createElement(y,r({ref:t},b))}));function y(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,r=new Array(o);r[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[s]="string"==typeof e?e:n,r[1]=i;for(var l=2;l<o;l++)r[l]=a[l];return d.createElement.apply(null,r)}return d.createElement.apply(null,a)}u.displayName="MDXCreateElement"},3148:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>p,Bullet:()=>b,Details:()=>y,SpecifiedBy:()=>s,assets:()=>l,contentTitle:()=>i,default:()=>v,frontMatter:()=>r,metadata:()=>c,toc:()=>u});var d=a(87462),n=a(67294),o=a(3905);const r={id:"add-received-sepa-direct-debit-b2-b-mandate-payload",title:"AddReceivedSepaDirectDebitB2bMandatePayload",hide_table_of_contents:!1},i=void 0,c={unversionedId:"api-reference/unions/add-received-sepa-direct-debit-b2-b-mandate-payload",id:"api-reference/unions/add-received-sepa-direct-debit-b2-b-mandate-payload",title:"AddReceivedSepaDirectDebitB2bMandatePayload",description:"Union type return by the addReceivedSepaDirectDebitB2bMandate mutation",source:"@site/docs/api-reference/unions/add-received-sepa-direct-debit-b2-b-mandate-payload.mdx",sourceDirName:"api-reference/unions",slug:"/api-reference/unions/add-received-sepa-direct-debit-b2-b-mandate-payload",permalink:"/api-reference/unions/add-received-sepa-direct-debit-b2-b-mandate-payload",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api-reference/unions/add-received-sepa-direct-debit-b2-b-mandate-payload.mdx",tags:[],version:"current",frontMatter:{id:"add-received-sepa-direct-debit-b2-b-mandate-payload",title:"AddReceivedSepaDirectDebitB2bMandatePayload",hide_table_of_contents:!1}},l={},b=()=>(0,o.kt)(n.Fragment,null,(0,o.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),s=e=>(0,o.kt)(n.Fragment,null,"Specification",(0,o.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),p=e=>(0,o.kt)(n.Fragment,null,(0,o.kt)("span",{className:e.class},e.text)),u=[{value:"Possible types",id:"possible-types",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>AddReceivedSepaDirectDebitB2bMandatePayload.<b>AddReceivedSepaDirectDebitB2bMandateSuccessPayload</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-addreceivedsepadirectdebitb2bmandatepayloadbaddreceivedsepadirectdebitb2bmandatesuccesspayloadbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AddReceivedSepaDirectDebitB2bMandatePayload.<b>ForbiddenRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-addreceivedsepadirectdebitb2bmandatepayloadbforbiddenrejectionbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AddReceivedSepaDirectDebitB2bMandatePayload.<b>AccountNotFoundRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-addreceivedsepadirectdebitb2bmandatepayloadbaccountnotfoundrejectionbcode-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AddReceivedSepaDirectDebitB2bMandatePayload.<b>AccountHolderTypeIndividualRejection</b></code> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-addreceivedsepadirectdebitb2bmandatepayloadbaccountholdertypeindividualrejectionbcode-",level:4},{value:"Returned by",id:"returned-by",level:3}],y=e=>{let{dataOpen:t,dataClose:a,children:r,startOpen:i=!1}=e;const[c,l]=(0,n.useState)(i);return(0,o.kt)("details",(0,d.Z)({},c?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,o.kt)("summary",{onClick:e=>{e.preventDefault(),l((e=>!e))},style:{listStyle:"none"}},c?t:a),c&&r)},m={Bullet:b,SpecifiedBy:s,Badge:p,toc:u,Details:y},f="wrapper";function v(e){let{components:t,...a}=e;return(0,o.kt)(f,(0,d.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Union type return by the addReceivedSepaDirectDebitB2bMandate mutation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"union AddReceivedSepaDirectDebitB2bMandatePayload = AddReceivedSepaDirectDebitB2bMandateSuccessPayload | ForbiddenRejection | AccountNotFoundRejection | AccountHolderTypeIndividualRejection\n")),(0,o.kt)("h3",{id:"possible-types"},"Possible types"),(0,o.kt)("h4",{id:"code-style-fontweight-normal-addreceivedsepadirectdebitb2bmandatepayloadbaddreceivedsepadirectdebitb2bmandatesuccesspayloadbcode-"},(0,o.kt)("a",{parentName:"h4",href:"/api-reference/objects/add-received-sepa-direct-debit-b2-b-mandate-success-payload"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"AddReceivedSepaDirectDebitB2bMandatePayload.",(0,o.kt)("b",null,"AddReceivedSepaDirectDebitB2bMandateSuccessPayload")))," ",(0,o.kt)(p,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return type in case of a successful response of the addReceivedSepaDirectDebitB2bMandate mutation")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-addreceivedsepadirectdebitb2bmandatepayloadbforbiddenrejectionbcode-"},(0,o.kt)("a",{parentName:"h4",href:"/api-reference/objects/forbidden-rejection"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"AddReceivedSepaDirectDebitB2bMandatePayload.",(0,o.kt)("b",null,"ForbiddenRejection")))," ",(0,o.kt)(p,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,o.kt)("blockquote",null),(0,o.kt)("h4",{id:"code-style-fontweight-normal-addreceivedsepadirectdebitb2bmandatepayloadbaccountnotfoundrejectionbcode-"},(0,o.kt)("a",{parentName:"h4",href:"/api-reference/objects/account-not-found-rejection"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"AddReceivedSepaDirectDebitB2bMandatePayload.",(0,o.kt)("b",null,"AccountNotFoundRejection")))," ",(0,o.kt)(p,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Rejection returned if the account was not found or if the user does not have the rights to know that the card exists")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-addreceivedsepadirectdebitb2bmandatepayloadbaccountholdertypeindividualrejectionbcode-"},(0,o.kt)("a",{parentName:"h4",href:"/api-reference/objects/account-holder-type-individual-rejection"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"AddReceivedSepaDirectDebitB2bMandatePayload.",(0,o.kt)("b",null,"AccountHolderTypeIndividualRejection")))," ",(0,o.kt)(p,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Rejection returned if the account holder type is individual.\nAn individual account holder can't create a b2b received direct debit mandate.")),(0,o.kt)("h3",{id:"returned-by"},"Returned by"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/api-reference/mutations/add-received-sepa-direct-debit-b2-b-mandate"},(0,o.kt)("inlineCode",{parentName:"a"},"addReceivedSepaDirectDebitB2bMandate")),"  ",(0,o.kt)(p,{class:"badge badge--secondary",text:"mutation",mdxType:"Badge"})))}v.isMDXComponent=!0}}]);