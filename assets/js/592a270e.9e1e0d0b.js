"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[71165],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,g=u["".concat(l,".").concat(m)]||u[m]||p[m]||a;return n?r.createElement(g,i(i({ref:t},d),{},{components:n})):r.createElement(g,i({ref:t},d))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},97092:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(83117),o=(n(67294),n(3905));const a={title:"Account onboarding"},i="Account onboarding",s={unversionedId:"topics/onboarding/index",id:"topics/onboarding/index",title:"Account onboarding",description:"Account onboarding is, at its core, the process to create account holders.",source:"@site/docs/topics/onboarding/index.mdx",sourceDirName:"topics/onboarding",slug:"/topics/onboarding/",permalink:"/topics/onboarding/",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/topics/onboarding/index.mdx",tags:[],version:"current",frontMatter:{title:"Account onboarding"},sidebar:"docSidebar",previous:{title:"Glossary",permalink:"/glossary"},next:{title:"Account onboarding",permalink:"/topics/onboarding/"}},l={},c=[{value:"Types of onboarding",id:"types",level:2},{value:"Purpose of onboarding",id:"purpose",level:2},{value:"Onboarding statuses",id:"statuses",level:2},{value:"Country requirements",id:"country-reqs",level:2},{value:"Sequence diagram: API onboarding flow",id:"diagram",level:2},{value:"Guides",id:"guides",level:2}],d={toc:c},u="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"account-onboarding"},"Account onboarding"),(0,o.kt)("p",null,"Account onboarding is, at its core, the ",(0,o.kt)("strong",{parentName:"p"},"process to create ",(0,o.kt)("a",{parentName:"strong",href:"/topics/onboarding/account-holders/"},"account holders")),"."),(0,o.kt)("p",null,"One end result of onboarding is ",(0,o.kt)("strong",{parentName:"p"},"also creating the first account")," for the new account holder.\nYou can create as many accounts for each account holder as required."),(0,o.kt)("admonition",{title:"Cross reference",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"During onboarding, users also ",(0,o.kt)("a",{parentName:"p",href:"/topics/onboarding/account-holders/#verification-process"},"complete an identity verification")," process, ",(0,o.kt)("a",{parentName:"p",href:"https://docs.swan.io/api/consent"},"consent to open the account"),", and ",(0,o.kt)("a",{parentName:"p",href:"https://docs.swan.io/guide/create-a-new-account#first-authentication-and-callback"},"authenticate")," (log in) for the first time.")),(0,o.kt)("h2",{id:"types"},"Types of onboarding"),(0,o.kt)("p",null,"There are two types of onboarding, directly linked to the two types of accounts Swan offers.\nEach onboarding has a unique ",(0,o.kt)("inlineCode",{parentName:"p"},"onboardingId"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Individual onboarding")," is the process of creating a new individual account holder, and opening a new Swan account for that account holder."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Company onboarding")," is the process of creating a new company account holder, and opening a new Swan account for that account holder.")),(0,o.kt)("p",null,"The individual and company onboarding processes are similar.\nHowever, they're split in the documentation to prevent mixing up small but important details."),(0,o.kt)("admonition",{title:"Swan Banking Frontend",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"If you'd like to customize the onboarding experience for your users (while respecting local regulations), check out the open source ",(0,o.kt)("a",{parentName:"p",href:"https://swan-io.github.io/swan-partner-frontend/specs/onboarding/"},"Swan Banking Frontend"),".")),(0,o.kt)("h2",{id:"purpose"},"Purpose of onboarding"),(0,o.kt)("p",null,"Completing the onboarding process serves several purposes."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Account holder")," is created with the status ",(0,o.kt)("inlineCode",{parentName:"li"},"Enabled"),"."),(0,o.kt)("li",{parentName:"ol"},"Account holder's ",(0,o.kt)("strong",{parentName:"li"},"account")," is created."),(0,o.kt)("li",{parentName:"ol"},"If the person who performed the onboarding process is the ",(0,o.kt)("strong",{parentName:"li"},"legal representative")," of the account, they have the first account membership with ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://docs.swan.io/concept/account-membership#rights-management"},"full permissions")),". ",(0,o.kt)("em",{parentName:"li"},"This isn't true if the person who performed the onboarding did so with power of attorney.")),(0,o.kt)("li",{parentName:"ol"},"Your relationship with the account holder is stored in the ",(0,o.kt)("inlineCode",{parentName:"li"},"partnershipStatusInfofield")," of the ",(0,o.kt)("inlineCode",{parentName:"li"},"account")," object.")),(0,o.kt)("h2",{id:"statuses"},"Onboarding statuses"),(0,o.kt)("mermaid",{value:"%%{ init: { 'flowchart': { 'curve': 'linear' } } }%%\nflowchart LR\n    OLC((Onboarding<br/>created)) -.-> OI[Ongoing Invalid]\n    OLC -.-> OV[Ongoing Valid]\n    OI -.-> OV\n    OV --\x3e F[Finalized]\n    subgraph FS[Final status]\n        F\n    end\n    style OLC fill:#D4D3D5,stroke:#514F59\n    style FS fill:#fffdf4,stroke:#cca922"}),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Status"),(0,o.kt)("th",{parentName:"tr",align:null},"Explanation"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Ongoing (Invalid)")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("ul",null,(0,o.kt)("li",null,"This is the first status assigned to an onboarding when ",(0,o.kt)("strong",{parentName:"td"},"using the frontend"),"."),(0,o.kt)("li",null,"If using the ",(0,o.kt)("strong",{parentName:"td"},"API"),", this is the first status if ",(0,o.kt)("strong",{parentName:"td"},"not all required information")," is included with your mutation."),(0,o.kt)("li",null,"Status might change to ",(0,o.kt)("inlineCode",{parentName:"td"},"Invalid")," if required information is removed or if some information is incorrect.")),(0,o.kt)("strong",{parentName:"td"},"Next step"),": Submit or update required information to advance to ",(0,o.kt)("inlineCode",{parentName:"td"},"Ongoing (Valid)")," (both you and the end user can submit or update information)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Ongoing (Valid)")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("ul",null,(0,o.kt)("li",null,"This is the first status assigned to an onboarding if ",(0,o.kt)("strong",{parentName:"td"},"using the API")," and you ",(0,o.kt)("strong",{parentName:"td"},"included all required information")," with your mutation."),(0,o.kt)("li",null,"Status changes to ",(0,o.kt)("inlineCode",{parentName:"td"},"Valid")," when missing required information is submitted or if incorrect information is updated.")),(0,o.kt)("strong",{parentName:"td"},"Next step"),': User completes form, clicks "Finalize," and provides consent to complete the onboarding process')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Finalized")),(0,o.kt)("td",{parentName:"tr",align:null},"Onboarding completed")))),(0,o.kt)("h2",{id:"country-reqs"},"Country requirements"),(0,o.kt)("p",null,"Onboarding is a ",(0,o.kt)("strong",{parentName:"p"},"highly localized experience"),".\nEverything from ",(0,o.kt)("strong",{parentName:"p"},"what to include in your API request")," to how to ask ",(0,o.kt)("strong",{parentName:"p"},"users to verify their identity")," to whether Swan ",(0,o.kt)("strong",{parentName:"p"},"requires certain ID numbers or documents")," depends on the account country."),(0,o.kt)("p",null,"Account onboarding country requirements are described in the ",(0,o.kt)("a",{parentName:"p",href:"/topics/onboarding/individual/#country-requirements-for-individual-accounts"},(0,o.kt)("strong",{parentName:"a"},"individual"))," and ",(0,o.kt)("a",{parentName:"p",href:"/topics/onboarding/company/#country-requirements-for-company-accounts"},(0,o.kt)("strong",{parentName:"a"},"company"))," onboarding sections.\nPlease follow the requirements for your target countries closely."),(0,o.kt)("h2",{id:"diagram"},"Sequence diagram: API onboarding flow"),(0,o.kt)("mermaid",{value:"sequenceDiagram\nparticipant S as Swan\nparticipant P as Partner\nparticipant U as User\n    alt Partner decision\n        P ->> P: Determines need for Swan account\n    else User request\n    activate U\n        U ->> P: Requests Swan account and<br/>provides required information\n    end\n    P ->> S: Creates onboarding ID\n    S --\x3e> P: Returns onboarding ID\n    P ->> U: Sends onboarding link (OAuth2)\n    U ->> S: Logs in\n    S --\x3e> P: Redirects user to partner interface\n    deactivate U\n    P ->> S: Requests user access token\n    S --\x3e> P: Returns user access token\n    P ->> S: Finalizes onboarding with user access token\n    S --\x3e> P: Confirms account holder and account creation"}),(0,o.kt)("h2",{id:"guides"},"Guides"),(0,o.kt)("p",null,"The following guides are common to the individual and company onboarding processes."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/topics/onboarding/overview/guide-get-onboarding-info"},"Get information about an onboarding")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/topics/onboarding/overview/guide-finalize-onboarding"},"Finalize an onboarding"))))}p.isMDXComponent=!0}}]);