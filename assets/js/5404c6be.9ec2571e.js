"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[4209],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),l=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},i=function(e){var t=l(e.components);return a.createElement(d.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),u=l(n),p=r,g=u["".concat(d,".").concat(p)]||u[p]||f[p]||o;return n?a.createElement(g,s(s({ref:t},i),{},{components:n})):a.createElement(g,s({ref:t},i))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=p;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c[u]="string"==typeof e?e:r,s[1]=c;for(var l=2;l<o;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},76031:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>f,Bullet:()=>i,Details:()=>g,SpecifiedBy:()=>u,assets:()=>l,contentTitle:()=>c,default:()=>y,frontMatter:()=>s,metadata:()=>d,toc:()=>p});var a=n(87462),r=n(67294),o=n(3905);const s={id:"card-consent-pending-status-info",title:"CardConsentPendingStatusInfo",hide_table_of_contents:!1},c=void 0,d={unversionedId:"api-reference/objects/card-consent-pending-status-info",id:"api-reference/objects/card-consent-pending-status-info",title:"CardConsentPendingStatusInfo",description:"when the user has to consent to add this card",source:"@site/docs/api-reference/objects/card-consent-pending-status-info.mdx",sourceDirName:"api-reference/objects",slug:"/api-reference/objects/card-consent-pending-status-info",permalink:"/api-reference/objects/card-consent-pending-status-info",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api-reference/objects/card-consent-pending-status-info.mdx",tags:[],version:"current",frontMatter:{id:"card-consent-pending-status-info",title:"CardConsentPendingStatusInfo",hide_table_of_contents:!1}},l={},i=()=>(0,o.kt)(r.Fragment,null,(0,o.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),u=e=>(0,o.kt)(r.Fragment,null,"Specification",(0,o.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),f=e=>(0,o.kt)(r.Fragment,null,(0,o.kt)("span",{className:e.class},e.text)),p=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>CardConsentPendingStatusInfo.<b>status</b></code><Bullet /><code>CardStatus!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="enum"/>',id:"code-style-fontweight-normal-cardconsentpendingstatusinfobstatusbcodecardstatus--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CardConsentPendingStatusInfo.<b>consent</b></code><Bullet /><code>Consent!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="object"/>',id:"code-style-fontweight-normal-cardconsentpendingstatusinfobconsentbcodeconsent--",level:4},{value:"Interfaces",id:"interfaces",level:3},{value:'<code>CardStatusInfo</code> <Badge class="badge badge--secondary" text="interface"/>',id:"cardstatusinfo-",level:4}],g=e=>{let{dataOpen:t,dataClose:n,children:s,startOpen:c=!1}=e;const[d,l]=(0,r.useState)(c);return(0,o.kt)("details",(0,a.Z)({},d?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,o.kt)("summary",{onClick:e=>{e.preventDefault(),l((e=>!e))},style:{listStyle:"none"}},d?t:n),d&&s)},b={Bullet:i,SpecifiedBy:u,Badge:f,toc:p,Details:g},m="wrapper";function y(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,a.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"when the user has to consent to add this card"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"type CardConsentPendingStatusInfo implements CardStatusInfo {\n  status: CardStatus!\n  consent: Consent!\n}\n")),(0,o.kt)("h3",{id:"fields"},"Fields"),(0,o.kt)("h4",{id:"code-style-fontweight-normal-cardconsentpendingstatusinfobstatusbcodecardstatus--"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"CardConsentPendingStatusInfo.",(0,o.kt)("b",null,"status"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/api-reference/enums/card-status"},(0,o.kt)("inlineCode",{parentName:"a"},"CardStatus!"))," ",(0,o.kt)(f,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,o.kt)(f,{class:"badge badge--secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Card status (always ConsentPending for type CardConsentPendingStatusInfo)")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-cardconsentpendingstatusinfobconsentbcodeconsent--"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"CardConsentPendingStatusInfo.",(0,o.kt)("b",null,"consent"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/api-reference/objects/consent"},(0,o.kt)("inlineCode",{parentName:"a"},"Consent!"))," ",(0,o.kt)(f,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,o.kt)(f,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The consent required to add this card")),(0,o.kt)("h3",{id:"interfaces"},"Interfaces"),(0,o.kt)("h4",{id:"cardstatusinfo-"},(0,o.kt)("a",{parentName:"h4",href:"/api-reference/interfaces/card-status-info"},(0,o.kt)("inlineCode",{parentName:"a"},"CardStatusInfo"))," ",(0,o.kt)(f,{class:"badge badge--secondary",text:"interface",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Card Status Information")))}y.isMDXComponent=!0}}]);